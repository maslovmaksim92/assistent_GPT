# self_editor.py
import os
import time
from code_writer import write_code
from tester import run_tests
from deployer import deploy

PROJECT_PATH = "./"

def get_all_py_files():
    files = []
    for root, _, filenames in os.walk(PROJECT_PATH):
        for f in filenames:
            if f.endswith(".py") and "venv" not in root:
                files.append(os.path.join(root, f))
    return files

def read_all_code():
    codebase = ""
    for path in get_all_py_files():
        with open(path, "r", encoding="utf-8") as f:
            codebase += f"# FILE: {path}\n{f.read()}\n\n"
    return codebase

def self_improve_cycle():
    print("[ü§ñ] –°–∞–º–æ—Ä–µ–¥–∞–∫—Ç–∏—Ä—É—é—â–∏–π —Ü–∏–∫–ª –Ω–∞—á–∞—Ç")
    codebase = read_all_code()

    print("[üß†] –û—Ç–ø—Ä–∞–≤–ª—è—é –∫–æ–¥ –Ω–∞ –∞–Ω–∞–ª–∏–∑ –∏ —É–ª—É—á—à–µ–Ω–∏–µ...")
    idea = "–ü—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä—É–π –∏ —É–ª—É—á—à–∞–π –∫–æ–¥ –ø—Ä–æ–µ–∫—Ç–∞. –£—Å—Ç—Ä–∞–Ω—è–π –¥—É–±–ª–∏—Ä–æ–≤–∞–Ω–∏–µ, –±–∞–≥–∏, —É–ª—É—á—à–∞–π –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä—É."
    
    if not write_code(idea, full_context=codebase):
        print("[‚ùå] –ù–µ —É–¥–∞–ª–æ—Å—å —É–ª—É—á—à–∏—Ç—å –∫–æ–¥.")
        return
    
    if run_tests():
        print("[‚úÖ] –ò–∑–º–µ–Ω–µ–Ω–∏—è –ø—Ä–æ—à–ª–∏ —Ç–µ—Å—Ç—ã, –¥–µ–ø–ª–æ–∏–º.")
        deploy()
    else:
        print("[‚ö†Ô∏è] –¢–µ—Å—Ç—ã –ø—Ä–æ–≤–∞–ª–µ–Ω—ã, –æ—Ç–∫–∞—Ç –∏–ª–∏ —Ä—É—á–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞.")

if __name__ == "__main__":
    while True:
        self_improve_cycle()
        print("[üïí] –°–ø–∏–º 10 –º–∏–Ω—É—Ç...\n")
        time.sleep(600)
