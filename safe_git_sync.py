import os
import subprocess
import shutil

ENV_FILE = ".env"
BACKUP_FILE = ".env_local_backup"
GITIGNORE_FILE = ".gitignore"

def run(cmd):
    result = subprocess.run(cmd, shell=True)
    if result.returncode != 0:
        print(f"[‚ùå] –û—à–∏–±–∫–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è: {cmd}")
        exit(1)

def backup_env():
    if os.path.exists(ENV_FILE):
        shutil.move(ENV_FILE, BACKUP_FILE)
        print("[üì¶] –§–∞–π–ª .env –ø–µ—Ä–µ–∏–º–µ–Ω–æ–≤–∞–Ω –≤ .env_local_backup")

def restore_env():
    if os.path.exists(BACKUP_FILE):
        shutil.move(BACKUP_FILE, ENV_FILE)
        print("[‚úÖ] .env –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –∏–∑ –±—ç–∫–∞–ø–∞")

def add_to_gitignore():
    if os.path.exists(GITIGNORE_FILE):
        with open(GITIGNORE_FILE, "r", encoding="utf-8") as f:
            lines = f.read().splitlines()
    else:
        lines = []

    if ENV_FILE not in lines:
        with open(GITIGNORE_FILE, "a", encoding="utf-8") as f:
            f.write(f"\n{ENV_FILE}\n")
        run("git add .gitignore")
        run('git commit -m "üõ° –î–æ–±–∞–≤–ª–µ–Ω .env –≤ .gitignore"')
        print("[üõ°] .env –¥–æ–±–∞–≤–ª–µ–Ω –≤ .gitignore –∏ –∑–∞–∫–æ–º–º–∏—á–µ–Ω")

def safe_git_pull():
    backup_env()
    run("git pull origin main --rebase")
    restore_env()
    add_to_gitignore()
    print("[üöÄ] Git pull —Å –∑–∞—â–∏—Ç–æ–π –æ—Ç .env –∑–∞–≤–µ—Ä—à—ë–Ω —É—Å–ø–µ—à–Ω–æ!")

if __name__ == "__main__":
    safe_git_pull()
